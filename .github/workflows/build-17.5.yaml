# https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images

on:
  workflow_dispatch:
  push:
    tags:
      - v17.5-system-*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-24.04
            platform: linux/amd64
            arch: amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64
            arch: arm64
    runs-on: ${{ matrix.os.runner }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=match,pattern=v(.*),group=1,suffix=-${{ matrix.os.arch }}
          flavor: |
            latest=false

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: 17.5-system.Dockerfile
          push: true
          platforms: ${{ matrix.os.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.os.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.os.platform }}
          provenance: false
          sbom: false

  merge-manifests:
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      packages: write
      contents: read # Needed to get repository owner and name
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag from ref
        id: get_tag
        run: echo "tag=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Create and push manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }} \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}-amd64 \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}-arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}

      - name: Delete platform-specific tags with gh CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          PACKAGE_NAME=$(echo "${{ env.IMAGE_NAME }}" | cut -d'/' -f2)

          delete_tag() {
            local tag=$1
            echo "Deleting tag: $tag"
            
            VERSION_ID=$(gh package versions "$PACKAGE_NAME" --owner "${{ github.repository_owner }}" --package-type container --json id,metadata --jq --arg TAG "$tag" '.[] | select(.metadata.container.tags[] == $TAG) | .id')

            if [ -z "$VERSION_ID" ]; then
              echo "Warning: Could not find version for tag '$tag'. Skipping deletion."
              return
            fi

            echo "Found version ID '$VERSION_ID' for tag '$tag'. Deleting..."
            gh package delete "$PACKAGE_NAME" --version "$VERSION_ID" --owner "${{ github.repository_owner }}" --package-type container --yes
          }

          delete_tag "${{ steps.get_tag.outputs.tag }}-amd64"
          delete_tag "${{ steps.get_tag.outputs.tag }}-arm64"
